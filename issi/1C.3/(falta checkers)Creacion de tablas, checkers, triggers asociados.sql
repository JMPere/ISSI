-------------------------------------------------------------------------------------------------------DROPS
DROP TABLE ESTADO;
DROP TABLE DURACION;

DROP TABLE CARRITO;
DROP TABLE VENTA;
DROP TABLE MUEBLE;

DROP TABLE PROYECTO;
DROP TABLE CLIENTE;
DROP TABLE EMPLEADO;

DROP SEQUENCE INCRE_OID_PROYECTO;
DROP SEQUENCE INCRE_OID_EMPLEADO;
DROP SEQUENCE INCRE_OID_CLIENTE;
DROP SEQUENCE INCRE_OID_MUEBLE;
DROP SEQUENCE INCRE_OID_VENTA;

-------------------------------------------------------------------------------------------------------TIPO ESTADO
CREATE TABLE ESTADO(

    OID_ESTADO INT UNIQUE NOT NULL,
    TIPO VARCHAR(20)
);
    
INSERT INTO ESTADO VALUES (1,'FINALIZADO');
INSERT INTO ESTADO VALUES (2,'EN_CURSO');
INSERT INTO ESTADO VALUES (3,'PENDIENTE');
INSERT INTO ESTADO VALUES (4,'STAND_BY');

-------------------------------------------------------------------------------------------------------TIPO DURACION

CREATE TABLE DURACION(

    OID_DURACION INT UNIQUE NOT NULL,
    TIPO VARCHAR(20)

);
    
INSERT INTO DURACION VALUES (1,'CORTO');
INSERT INTO DURACION VALUES (2,'MEDIO');
INSERT INTO DURACION VALUES (3,'LARGO');

-------------------------------------------------------------------------------------------------------TABLAS

CREATE TABLE CLIENTE(

    OID_CLIENTE NUMBER(7) NOT NULL,
    NICKNAME VARCHAR(16) NOT NULL,
    DNI VARCHAR(9) NOT NULL,
    PRIMARY KEY (OID_CLIENTE), 
    UNIQUE(NICKNAME),
    UNIQUE (DNI),
    CONTRASE헤 VARCHAR(16),
    NOMBRE VARCHAR(25),
    APELLIDOS VARCHAR(25),
    FECHA_NACIMIENTO DATE,
    TELEFONO NUMBER(9) NOT NULL,
    CORREO VARCHAR(40)

);

CREATE TABLE EMPLEADO(

    OID_EMPLEADO NUMBER(7) NOT NULL,
    NICKNAME VARCHAR(16) NOT NULL,
    DNI VARCHAR(9),
    PRIMARY KEY(OID_EMPLEADO),
    UNIQUE(NICKNAME),
    UNIQUE(DNI),
    CONTRASE헤 VARCHAR(16),
    NOMBRE VARCHAR(25),
    APELLIDOS VARCHAR(25),
    FECHA_NACIMIENTO DATE,
    TELEFONO NUMBER(9),
    CORREO VARCHAR(40) 
 
);

CREATE TABLE PROYECTO(

    OID_PROYECTO NUMBER(7),
    NOMBRE VARCHAR(20) NOT NULL,
    PRIMARY KEY(OID_PROYECTO),
    UNIQUE(NOMBRE),
    DESCRIPCION VARCHAR(100),
    FECHA_INICIO DATE,
    FECHA_FINAL DATE,
    VALORACION INT,
    DURACION INT,
    NUMPLAZOS NUMBER(1),
    ESTADO NUMBER(1),
    PERMISO CHAR(1)DEFAULT 'Y',
    OID_CLIENTE INT,
    OID_EMPLEADO INT,
    FOREIGN KEY (OID_EMPLEADO) REFERENCES EMPLEADO(OID_EMPLEADO),
    FOREIGN KEY (OID_CLIENTE) REFERENCES CLIENTE(OID_CLIENTE),
    FOREIGN KEY (ESTADO) REFERENCES ESTADO(OID_ESTADO),
    FOREIGN KEY (DURACION) REFERENCES DURACION(OID_DURACION)

);
CREATE TABLE Mueble(
      
      oid_mueble number(7),
      PRIMARY KEY (oid_mueble),
      nombreMueble varchar(20),
      unique(nombreMueble),
      descripcion varchar(100),
      precio number(7,2),
      imagen varchar(64),
      stock integer default 0
      
);

CREATE TABLE Carrito(
        
      nombreMueble varchar(25),
      nickname_cliente varchar(16),
      PRIMARY KEY(nombreMueble, nickname_cliente),
      cantidad integer,
      precio number(8,2),
      FOREIGN KEY (nickname_cliente) REFERENCES Cliente(NICKNAME),
      FOREIGN KEY (nombreMueble) REFERENCES Mueble(nombreMueble)
);

CREATE TABLE Venta(

      oid_venta number(7),
      PRIMARY KEY(oid_venta),
      nickname_cliente varchar(16),
      nombreMueble varchar(20),
      cantidadMueble int,
      fechaCompra date, 
      precioTotal number(8,2),
      numPlazos integer,
      FOREIGN KEY (nombreMueble, nickname_cliente) REFERENCES Carrito(nombreMueble, nickname_cliente),
      FOREIGN KEY (nickname_cliente) REFERENCES Cliente(NICKNAME)
);
-------------------------------------------------------------------------------------------------------SECUENCIAS

CREATE SEQUENCE INCRE_OID_PROYECTO
  INCREMENT BY 1
  START WITH 1
  MAXVALUE 999999
  CYCLE;

CREATE SEQUENCE INCRE_OID_EMPLEADO
  INCREMENT BY 1
  START WITH 1
  MAXVALUE 999999
  CYCLE;

CREATE SEQUENCE INCRE_OID_CLIENTE
  INCREMENT BY 1
  START WITH 1
  MAXVALUE 999999
  CYCLE;
  
  CREATE SEQUENCE INCRE_OID_MUEBLE
  INCREMENT BY 1
  START WITH 1
  MAXVALUE 999999
  CYCLE;
  
  CREATE SEQUENCE INCRE_OID_VENTA
  INCREMENT BY 1
  START WITH 1
  MAXVALUE 999999
  CYCLE;
  
-------------------------------------------------------------------------------------------------------FUNCIONES

CREATE OR REPLACE FUNCTION ACT_PRECIO_X_CANT                --CALCULA Y RETORNA EL PRECIO DE UN MUEBLE POR LA CANTIDAD
(
    NOMBRE_MUEBLE VARCHAR,
    CANTIDAD NUMBER
)
    RETURN NUMBER
IS
    PRECIO_MUEBLE NUMBER(8,2);
    PRECIO_TOTAL NUMBER(8,2);
BEGIN
    SELECT PRECIO INTO PRECIO_MUEBLE
    FROM    MUEBLE
    WHERE NOMBREMUEBLE=NOMBRE_MUEBLE;
    
    PRECIO_TOTAL:=PRECIO_MUEBLE * CANTIDAD;
    RETURN PRECIO_TOTAL;
    
END ACT_PRECIO_X_CANT;
-------------------------------------------------------------------------------------------------------PROCEDURES
CREATE OR REPLACE PROCEDURE INSERTAR_VENTA              --INSERTA EN VENTA LA CESTA DE UN CLIENTE
(
    NICK VARCHAR,
    NPLAZOS INT
)
IS
BEGIN
    INSERT INTO VENTA(NOMBREMUEBLE, PRECIOTOTAL, nickname_cliente, cantidadmueble) 
    SELECT carrito.nombremueble, carrito.precio,carrito.nickname_cliente, carrito.cantidad
    FROM CARRITO
    WHERE carrito.nickname_cliente=NICK;
    UPDATE VENTA SET numplazos=NPLAZOS WHERE nickname_cliente=NICK;
END;
-------------------------------------------------------------------------------------------------------TRIGGERS

CREATE OR REPLACE TRIGGER GENERA_PK_CLIENTE_AI              --GENERA OID PARA CLIENTES
BEFORE INSERT ON CLIENTE
FOR EACH ROW
BEGIN
 SELECT INCRE_OID_CLIENTE.NEXTVAL INTO :NEW.OID_CLIENTE FROM DUAL;
END;

----------
CREATE OR REPLACE TRIGGER GENERA_PK_EMPLEADO_AI             --GENERA OID EMPLEADOS
BEFORE INSERT ON EMPLEADO
FOR EACH ROW
BEGIN
  SELECT INCRE_OID_EMPLEADO.NEXTVAL INTO :NEW.OID_EMPLEADO FROM DUAL;
END;

----------
CREATE OR REPLACE TRIGGER GENERA_PK_PROYECTO_AI             --GENERA OID PARA PROYECTOS
BEFORE INSERT ON PROYECTO
FOR EACH ROW
BEGIN
 SELECT INCRE_OID_PROYECTO.NEXTVAL INTO :NEW.OID_PROYECTO FROM DUAL;
END;

----------
CREATE OR REPLACE TRIGGER GENERA_PK_MUEBLE_AI               --GENERA OID PARA MUEBLES
BEFORE INSERT ON MUEBLE
FOR EACH ROW
BEGIN
 SELECT INCRE_OID_MUEBLE.NEXTVAL INTO :NEW.OID_MUEBLE FROM DUAL;
END;

----------
CREATE OR REPLACE TRIGGER GENERA_PK_VENTA_AI                --GENERA OID PARA VENTAS
BEFORE INSERT ON VENTA
FOR EACH ROW
BEGIN
 SELECT INCRE_OID_VENTA.NEXTVAL INTO :NEW.OID_VENTA FROM DUAL;
 SELECT CURRENT_DATE INTO :NEW.FECHACOMPRA FROM DUAL;
END;

CREATE OR REPLACE TRIGGER CANT_PRECIO_MUEBLES               --OBTIENE E INSERTA EN LA TABLA EL PRECIO POR UNIDAD DE CADA MUEBLE
BEFORE INSERT ON CARRITO
FOR EACH ROW
BEGIN
    SELECT act_precio_x_cant(:NEW.NOMBREMUEBLE, :NEW.CANTIDAD) INTO :NEW.PRECIO
    FROM DUAL;
END;

CREATE OR REPLACE TRIGGER INSERTAR_PRECIO_BI                --OBTIENE E INSERTA EN LA TABLA EL PRECIO TOTAL DE CADA MUEBLE EN EL CARRITO POR CANTIDAD
BEFORE INSERT ON CARRITO
FOR EACH ROW
DECLARE PRECIO_TOTAL NUMBER(8,2);
BEGIN
    SELECT PRECIO INTO PRECIO_TOTAL
    FROM MUEBLE M
    WHERE M.NOMBREMUEBLE=:NEW.NOMBREMUEBLE;
    
    precio_total:=PRECIO_TOTAL * :NEW.CANTIDAD;
    
END;

CREATE OR REPLACE TRIGGER ACT_STOCK_MUEBLE_AI                 --ACTUALIZA EL STOCK AL COMPRAR UN MUEBLE
AFTER INSERT ON VENTA
FOR EACH ROW
DECLARE
    STOCK_MUEBLE NUMBER;
    CANT INT;
BEGIN
    SELECT STOCK INTO STOCK_MUEBLE
    FROM MUEBLE
    WHERE NOMBREMUEBLE= :NEW.NOMBREMUEBLE;

    SELECT CANTIDAD INTO CANT
    FROM CARRITO
    WHERE NOMBREMUEBLE=:NEW.NOMBREMUEBLE AND CARRITO.NICKNAME_CLIENTE=:NEW.NICKNAME_CLIENTE;
    
    UPDATE MUEBLE SET STOCK = STOCK_MUEBLE - CANT WHERE NOMBREMUEBLE=:NEW.NOMBREMUEBLE;
END;

-------------------------------------------------------------------------------------------------------INSERTS CLIENTES
INSERT INTO CLIENTE(NICKNAME, CONTRASE헤, DNI, NOMBRE, APELLIDOS, FECHA_NACIMIENTO, TELEFONO, CORREO) 
VALUES ('PEPE777','3142','45821365L','PEPE', 'GONZALEZ',DATE '1991-5-14',652987412,'PEPE@GMAIL.COM');

INSERT INTO CLIENTE(NICKNAME, CONTRASE헤, DNI, NOMBRE, APELLIDOS, FECHA_NACIMIENTO, TELEFONO, CORREO) 
VALUES ('MANU131','2242','24821365D','MANU', 'LOPEZ',DATE '1989-7-24',774987412,'MANU@GMAIL.COM');

INSERT INTO CLIENTE(NICKNAME,CONTRASE헤, DNI, NOMBRE, APELLIDOS, FECHA_NACIMIENTO, TELEFONO, CORREO) 
VALUES ('ALEX21','5548','49921365H','ALE', 'PEREZ',DATE '1999-4-6',698627412,'ALE@GMAIL.COM');
--CHECK CLIENTE EXISTENTE CON MENSAJE
----------------------------------------------------------------INSERTS EMPLEADOS
INSERT INTO EMPLEADO(NICKNAME, CONTRASE헤, DNI,NOMBRE,APELLIDOS,FECHA_NACIMIENTO,TELEFONO,CORREO)
VALUES('PEDRO31','1111','52146325P','PEDRO','ROMERO',DATE '1992-3-12',456213654,'PEDRO@GMAIL.COM');

INSERT INTO EMPLEADO(NICKNAME, CONTRASE헤, DNI,NOMBRE,APELLIDOS,FECHA_NACIMIENTO,TELEFONO,CORREO)
VALUES('LOLA12','1131','35146325W','LOLA','MORENO',DATE '1995-2-22',906213612,'LOLA@GMAIL.COM');

-------------------------------------------------------------------------------------------------------INSERTS PROYECTOS
INSERT INTO PROYECTO(NOMBRE, DESCRIPCION, FECHA_INICIO, FECHA_FINAL,VALORACION,DURACION,NUMPLAZOS,ESTADO,PERMISO,OID_CLIENTE,OID_EMPLEADO)
VALUES('PROJECTX','TOP SECRET',DATE '2019-1-5',DATE '2019-3-10',8,2,4,3,'Y',1,1);

INSERT INTO PROYECTO(NOMBRE, DESCRIPCION, FECHA_INICIO, FECHA_FINAL,VALORACION,DURACION,NUMPLAZOS,ESTADO,PERMISO,OID_CLIENTE,OID_EMPLEADO)
VALUES('SEGUNDO','A헲 NUEVO',DATE '2019-1-1',DATE '2019-3-1',8,2,4,3,'Y',1,1);

-------------------------------------------------------------------------------------------------------INSERTS MUEBLES
INSERT INTO MUEBLE(nombremueble, descripcion, imagen, precio, stock) VALUES('SILLA', 'MUY COMODAS', 'U34928', 32.65, 20); --모모멙ALTA TRIGGERS O PROCEDURES SIN SECUENCIA PARA CUANDO SE A헤DAN MAS MUEBLES AUMENTAR STOCK Y DISMINUIR SI SE COMPRAN!!!!
INSERT INTO MUEBLE(nombremueble, descripcion, imagen, precio, stock) VALUES('MESA', 'BONITAS', '66F4928', 44.33, 20); 
INSERT INTO MUEBLE(nombremueble, descripcion, imagen, precio, stock) VALUES('ARMARIO', 'GRANDE', '55344928', 76.80, 20); 

-------------------------------------------------------------------------------------------------------INSERTS CARRITOS
INSERT INTO CARRITO(nombremueble, nickname_cliente,cantidad) VALUES('SILLA','PEPE777',15);
INSERT INTO CARRITO(nombremueble, nickname_cliente,cantidad) VALUES('MESA','ALEX21',2);
INSERT INTO CARRITO(nombremueble, nickname_cliente,cantidad) VALUES('ARMARIO','ALEX21',1);
INSERT INTO CARRITO(nombremueble, nickname_cliente,cantidad) VALUES('ARMARIO','MANU131',1);

-------------------------------------------------------------------------------------------------------INSERTS VENTAS
EXECUTE INSERTAR_VENTA('MANU131',2); -- CHECK PARA NUMPLAZOS Y CHECK STOCK NO COMPRAR SI ES 0 EL STOCK
EXECUTE INSERTAR_VENTA('ALEX21',4); --BORRAR ELEMENTOS DE CARRITO